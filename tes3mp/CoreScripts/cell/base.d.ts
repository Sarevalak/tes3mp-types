declare class BaseCell {
    constructor(cellDescription: any);
    ContainsPosition(posX: any, posY: any): boolean;
    HasEntry(): any;
    EnsurePacketTables(): void;
    EnsurePacketValidity(): void;
    AddLinkToRecord(storeType: any, recordId: any, uniqueIndex: any): void;
    RemoveLinkToRecord(storeType: any, recordId: any, uniqueIndex: any): void;
    GetVisitorCount(): any;
    AddVisitor(pid: any): void;
    RemoveVisitor(pid: any): void;
    GetAuthority(): any;
    SetAuthority(pid: any): void;
    ContainsObject(uniqueIndex: any): boolean;
    HasContainerData(): boolean;
    HasActorData(): boolean;
    InitializeObjectData(uniqueIndex: any, refId: string): void;
    DeleteObjectData(uniqueIndex: any): void;
    MoveObjectData(uniqueIndex: any, newCell: any): void;
    SaveLastVisit(playerName: any): void;
    SaveObjectsDeleted(pid: any): void;
    SaveObjectsPlaced(pid: any): void;
    SaveObjectsSpawned(pid: any): void;
    SaveObjectsLocked(pid: any): void;
    SaveObjectTrapsTriggered(pid: any): void;
    SaveObjectsScaled(pid: any): void;
    SaveObjectStates(pid: any): void;
    SaveDoorStates(pid: any): void;
    SaveContainers(pid: any): void;
    SaveActorList(pid: any): void;
    SaveActorPositions(): void;
    SaveActorStatsDynamic(): void;
    SaveActorEquipment(pid: any): void;
    SaveActorDeath(pid: any): void;
    SaveActorCellChanges(pid: any): void;
    LoadActorPackets(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectsDeleted(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectsPlaced(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectsSpawned(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectsLocked(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectTrapsTriggered(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectsScaled(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadObjectStates(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadDoorStates(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadContainers(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorList(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorAuthority(pid: any): void;
    LoadActorPositions(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorStatsDynamic(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorEquipment(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorAI(pid: any, objectData: any, uniqueIndexArray: any): void;
    LoadActorCellChanges(pid: any, objectData: any): void;
    RequestContainers(pid: any, requestUniqueIndexes: any): void;
    RequestActorList(pid: any): void;
    LoadInitialCellData(pid: any): void;
    LoadMomentaryCellData(pid: any): void;
    LoadGeneratedRecords(pid: any): void;
}
